<head>

    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <style>
    .background {
    fill: #FFFFFF;
    fill-opacity: 0.01;
    }

    .component {
        fill: #e1e1e1;
    }

    .component .label {
        font-family: Myriad, "Helvetic Neue", Helvetica, Arial;
        text-anchor: middle;
        fill: #0000FF;
    }

    .arc {
        stroke-weight:0.1;
        fill: #4e8fff;
    }


    .arc2 {
        stroke-weight:0.1;
        fill: #3660b0;
    }


    .label {
        font-family:  Myriad, "Helvetic Neue", Helvetica, Arial;
        text-anchor: middle;
    }

    .radial-svg {
        display: block;
        margin: 0 auto;
    }
            #test .arc2 {
                stroke-weight:0.1;
                fill: #3660b0;
            }

            #outer {
                background:#FFFFFF;
                border-radius: 5px;
                color: #000;
            }

            #div1, #div2, #div3, #div4 {
                width: 33%;
                height: 200px;
                box-sizing: border-box;
                float: left;
            }

            #div2 .arc {
                stroke-weight: 0.1;
                fill: #f0a417;
            }

            #div2 .arc2 {
                stroke-weight: 0.1;
                fill: #b00d08;
            }

            #div3 .arc {
                stroke-weight: 0.1;
                fill: #1d871b;
            }


            .selectedRadial {
                border-radius: 3px;
                background: #f4f4f4;
                color: #000;
                box-shadow: 0 1px 5px rgba(0,0,0,0.4);
                -moz-box-shadow: 0 1px 5px rgba(0,0,0,0.4);
                border: 1px solid rgba(200,200,200,0.85);
            }

            .radial {
                border-radius: 3px;
                background: #FFFFFF;
                color: #000;

            }

            progress {
                background-color: #85E87C;
                border-radius: 2px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
            }

            progress::-moz-progress-bar {
                background-color: #85E87C;
                border-radius: 2px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
            }

            progress::-webkit-progress-value {
                background-color: #85E87C;
                border-radius: 2px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
            }

            .badprogress {
                background: repeating-linear-gradient(
                                      45deg,
                                      #808080,
                                      #808080 10px,
                                      #666666 10px,
                                      #666666 20px
                                    );
                border-radius: 2px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
            }

            .badprogress::-moz-progress-bar {
                background: repeating-linear-gradient(
                                      45deg,
                                      #808080,
                                      #808080 10px,
                                      #666666 10px,
                                      #666666 20px
                                    );
                border-radius: 2px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
            }

            .badprogress::-webkit-progress-value {
                background: repeating-linear-gradient(
                                      45deg,
                                      #808080,
                                      #808080 10px,
                                      #666666 10px,
                                      #666666 20px
                                    );
                border-radius: 2px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
            }

            progress[value<="50"]::-moz-progress-bar {
                background-color : #FF0000;
            }
            progress[value<="50"]::-webkit-progress-value {
                background-color : #FF0000;
            }
            progress[value<="50"] {
                background-color : #FF0000;
            }

            .background {
                margin: auto;
            }

            </style>
</head>
<body>
<h1 id="titleText"></h1>
Showing Data For The <select id="year">
    <option>2014</option>
    <option>2013</option>
    <option>2012</option>
    <option>2011</option>
    <option>2010</option>
    <option>2009</option>
</select>
School Year.
<table id="schoolTable" style="margin-top: 2em">
<thead id="schoolTableHeader" style="text-decoration: underline">
    <tr>
    </tr>
</thead>

<tbody>
<tr id="">
    <!--<td><div id="div1"></div></td>
    <td><div id="div2"></div></td>-->
</tr>
<tr id="gradRow">

</tr>
<tr id="attendanceRow">
    
</tr>
<tr id="istepRow">

</tr>
</tbody>
</table>

<script>
schoolArr = [];
var selectedYear = <%= @year %>

$(document).ready(function() {
    $("#year").val(selectedYear);
    getCorpName();
    getSchools();
    console.log(schoolArr);
});

$("#year").on('change', function() {
    window.location = '<%= statistics_path %>/<%= params[:id] %>?year=' + $( "#year option:selected" ).text();
});

function getCorpName(){
    $.ajax({
        datatype: "json",
        url: "http://indianalearns.info/api/v1/corporations",
        success: function(data){
            data.forEach(function(value, index, ar){
                if(value.id == '<%= params[:id] %>'){
                    var t = document.createTextNode("Statistics for " + value.name);
                    var title = document.getElementById("titleText");
                    title.appendChild(t);
                }
            });
        }
    })
}

function getSchools(){
    $.ajax({
        datatype: "json",
        url: "http://indianalearns.info/api/v1/schools",
        success: function(data){
            data.forEach(function(value, index, ar){
                if(value.corp_id == '<%= params[:id] %>'){
                    schoolArr.push(value);
                    getSchoolReports(value.id, selectedYear);
                    getSchoolGrad(value.id);
                    getISTEP(value.id, selectedYear);
                    var tr = document.getElementById('schoolTable').tHead.children[0];
                    var th = document.createElement("th");
                    th.innerHTML = value.name;
                    tr.appendChild(th);
                }
            });
        }
    });
}

function getISTEP(schoolId, year){
    $.ajax({
        datatype: "json",
        url: "http://indianalearns.info/api/v1/reports/school/public_istep?school_id=" + schoolId + "&group=total&year=" + year,
        success: function(data){
            var istepRow = document.getElementById("istepRow");

            if(typeof data[0] !== 'undefined' && data.length > 0){
                var text = document.createTextNode((data[0].pass_both_percent * 100).toFixed(0) + "%");
            } else {
                var text = document.createTextNode("No Data");
            }
            
            var td = document.createElement("td");
            td.style.fontSize = "2em";
            td.style.textAlign = "right";

            if(data[0] !== 'undefined' && data.length > 0){
                if((data[0].pass_both_percent * 100) > 68){
                    td.style.color = "green";
                } else {
                    td.style.color = "red";
                }
            } else {
                td.style.color = "grey";
            }

            td.appendChild(text);
            istepRow.appendChild(td);
        }
    })
}

function getSchoolReports(schoolId, year){
    $.ajax({
        datatype: "json",
        url: "http://indianalearns.info/api/v1/reports/school/attendance?school_id=" + schoolId + "&year=" + year,
        success: function(data){
            var td = document.createElement("td");
            var progressBar = document.createElement("progress");
            if(typeof data[0] !== 'undefined' && data.length > 0){
                progressBar.setAttribute("value", "" + data[0].attendance);
            } else {
                progressBar.setAttribute("value", "" + "100");
                progressBar.setAttribute("class", "badprogress");
            }
            progressBar.setAttribute("max", "100");
            var tr = document.getElementById('attendanceRow');
            td.innerHTML = "Attendance %: "
            td.appendChild(progressBar);
            tr.appendChild(td);
        }
    })
}

function getSchoolGrad(schoolId){
    $.ajax({
        datatype: "json",
        url: "http://indianalearns.info/api/v1/reports/school/graduation_rates?school_id=" + schoolId + "&group=total",
        success: function(data){
            var td = document.createElement("td");
            var progressBar = document.createElement("progress");
            if(typeof data[0] !== 'undefined' && data.length > 0){
                var rate = data[0].graduation_rate * 100;
                progressBar.setAttribute("value", "" + rate);
            } else {
                progressBar.setAttribute("value", "" + "100");
                progressBar.setAttribute("class", "badprogress");
            }
            progressBar.setAttribute("max", "100");
            var tr = document.getElementById('gradRow');
            td.innerHTML = "Graduation %: "
            td.appendChild(progressBar);
            tr.appendChild(td);
        }
    })
}
</script>

<!-- Below is Javascript that I can't understand!!! :) -->
<script language="JavaScript">
function radialProgress(parent) {
    var _data=null,
        _duration= 1000,
        _selection,
        _margin = {top:0, right:0, bottom:30, left:0},
        __width = 300,
        __height = 300,
        _diameter,
        _label="",
        _fontSize=10;


    var _mouseClick;

    var _value= 0,
        _minValue = 0,
        _maxValue = 100;

    var  _currentArc= 0, _currentArc2= 0, _currentValue=0;

    var _arc = d3.svg.arc()
        .startAngle(0 * (Math.PI/180)); //just radians

    var _arc2 = d3.svg.arc()
        .startAngle(0 * (Math.PI/180))
        .endAngle(0); //just radians


    _selection=d3.select(parent);


    function component() {

        _selection.each(function (data) {

            // Select the svg element, if it exists.
            var svg = d3.select(this).selectAll("svg").data([data]);

            var enter = svg.enter().append("svg").attr("class","radial-svg").append("g");

            measure();

            svg.attr("width", __width)
                .attr("height", __height);


            var background = enter.append("g").attr("class","component")
                .attr("cursor","pointer")
                .on("click",onMouseClick);


            _arc.endAngle(360 * (Math.PI/180))

            background.append("rect")
                .attr("class","background")
                .attr("width", _width)
                .attr("height", _height);

            background.append("path")
                .attr("transform", "translate(" + _width/2 + "," + _width/2 + ")")
                .attr("d", _arc);

            background.append("text")
                .attr("class", "label")
                .attr("transform", "translate(" + _width/2 + "," + (_width + _fontSize) + ")")
                .text(_label);
           var g = svg.select("g")
                .attr("transform", "translate(" + _margin.left + "," + _margin.top + ")");


            _arc.endAngle(_currentArc);
            enter.append("g").attr("class", "arcs");
            var path = svg.select(".arcs").selectAll(".arc").data(data);
            path.enter().append("path")
                .attr("class","arc")
                .attr("transform", "translate(" + _width/2 + "," + _width/2 + ")")
                .attr("d", _arc);

            //Another path in case we exceed 100%
            var path2 = svg.select(".arcs").selectAll(".arc2").data(data);
            path2.enter().append("path")
                .attr("class","arc2")
                .attr("transform", "translate(" + _width/2 + "," + _width/2 + ")")
                .attr("d", _arc2);


            enter.append("g").attr("class", "labels");
            var label = svg.select(".labels").selectAll(".label").data(data);
            label.enter().append("text")
                .attr("class","label")
                .attr("y",_width/2+_fontSize/3)
                .attr("x",_width/2)
                .attr("cursor","pointer")
                .attr("width",_width)
                // .attr("x",(3*_fontSize/2))
                .text(function (d) { return Math.round((_value-_minValue)/(_maxValue-_minValue)*100) + "%" })
                .style("font-size",_fontSize+"px")
                .on("click",onMouseClick);

            path.exit().transition().duration(500).attr("x",1000).remove();


            layout(svg);

            function layout(svg) {

                var ratio=(_value-_minValue)/(_maxValue-_minValue);
                var endAngle=Math.min(360*ratio,360);
                endAngle=endAngle * Math.PI/180;

                path.datum(endAngle);
                path.transition().duration(_duration)
                    .attrTween("d", arcTween);

                if (ratio > 1) {
                    path2.datum(Math.min(360*(ratio-1),360) * Math.PI/180);
                    path2.transition().delay(_duration).duration(_duration)
                        .attrTween("d", arcTween2);
                }

                label.datum(Math.round(ratio*100));
                label.transition().duration(_duration)
                    .tween("text",labelTween);

            }

        });

        function onMouseClick(d) {
            if (typeof _mouseClick == "function") {
                _mouseClick.call();
            }
        }
    }

    function labelTween(a) {
        var i = d3.interpolate(_currentValue, a);
        _currentValue = i(0);

        return function(t) {
            _currentValue = i(t);
            this.textContent = Math.round(i(t)) + "%";
        }
    }

    function arcTween(a) {
        var i = d3.interpolate(_currentArc, a);

        return function(t) {
            _currentArc=i(t);
            return _arc.endAngle(i(t))();
        };
    }

    function arcTween2(a) {
        var i = d3.interpolate(_currentArc2, a);

        return function(t) {
            return _arc2.endAngle(i(t))();
        };
    }


    function measure() {
        _width=_diameter - _margin.right - _margin.left - _margin.top - _margin.bottom;
        _height=_width;
        _fontSize=_width*.2;
        _arc.outerRadius(_width/2);
        _arc.innerRadius(_width/2 * .85);
        _arc2.outerRadius(_width/2 * .85);
        _arc2.innerRadius(_width/2 * .85 - (_width/2 * .15));
    }


    component.render = function() {
        measure();
        component();
        return component;
    }

    component.value = function (_) {
        if (!arguments.length) return _value;
        _value = [_];
        _selection.datum([_value]);
        return component;
    }


    component.margin = function(_) {
        if (!arguments.length) return _margin;
        _margin = _;
        return component;
    };

    component.diameter = function(_) {
        if (!arguments.length) return _diameter
        _diameter =  _;
        return component;
    };

    component.minValue = function(_) {
        if (!arguments.length) return _minValue;
        _minValue = _;
        return component;
    };

    component.maxValue = function(_) {
        if (!arguments.length) return _maxValue;
        _maxValue = _;
        return component;
    };

    component.label = function(_) {
        if (!arguments.length) return _label;
        _label = _;
        return component;
    };

    component._duration = function(_) {
        if (!arguments.length) return _duration;
        _duration = _;
        return component;
    };

    component.onClick = function (_) {
        if (!arguments.length) return _mouseClick;
        _mouseClick=_;
        return component;
    }

    return component;

}
    var div1=d3.select(document.getElementById('div1'));
    var div2=d3.select(document.getElementById('div2'));
    var div3=d3.select(document.getElementById('div3'));
    var div4=d3.select(document.getElementById('div4'));

    start();

    function onClick1() {
        deselect();
        div1.attr("class","selectedRadial");
    }

    function onClick2() {
        deselect();
        div2.attr("class","selectedRadial");
    }

    function onClick3() {
        deselect();
        div3.attr("class","selectedRadial");
    }

    function labelFunction(val,min,max) {

    }

    function deselect() {
        div1.attr("class","radial");
        div2.attr("class","radial");
        div3.attr("class","radial");
    }

    function start() {

        var rp1 = radialProgress(document.getElementById('div1'))
                .label("% of Budget")
                .diameter(150)
                .value(78)
                .render();

        var rp2 = radialProgress(document.getElementById('div2'))
                .label("% of Budget")
                .diameter(150)
                .value(132)
                .render();

        var rp3 = radialProgress(document.getElementById('div3'))
                .label("St. Joe Elementary School")
                .onClick(onClick3)
                .diameter(150)
                .minValue(100)
                .maxValue(200)
                .value(150)
                .render();

    }
</script>
</body>
</html>